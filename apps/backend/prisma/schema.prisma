// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @unique
  email     String      @unique
  firstName String
  lastName  String
  role     String      @default("patient")

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  ehrId     String?
  ehr       EHR?        @relation("UserEHR", fields: [ehrId], references: [id], onDelete: SetNull)
}

model EHR {
  id          String     @id @default(uuid())
  name        String     @unique // Ej: Athena, Allscripts, Cerner
  baseUrl     String
  authType    String     // Ej: OAuth2, API_KEY
  mappings    EHRMapping[] // Ej: Patient, Appointment, etc.
  users       User[]     @relation("UserEHR")
}

model EHRMapping {
  id          String   @id @default(uuid())
  ehr         EHR      @relation(fields: [ehrId], references: [id], onDelete: Cascade)
  ehrId       String
  entityType  String   // Ej: Patient, Appointment
  fieldName   String   // Ej: p_name, PATIENT_IDENT_NAME
  mappingPath String   // Ej: patient.name, $.patient.p_name
    dataType    EHRDataType  @default(string)   // Ej: string, date
  required    Boolean  @default(true)
  apiEndpoint String  // Ej: /api/patient, /api/appointment
}

enum EHRDataType {
  string
  number
  date
  boolean
  multiple
  radio
  dropdown
}

